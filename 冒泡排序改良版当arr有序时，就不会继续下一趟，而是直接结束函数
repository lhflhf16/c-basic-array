#define _CRT_SECURE_NO_WARNINGS 1


//冒泡排序改良版当arr有序时，就不会继续下一趟，而是直接结束函数
#include<stdio.h>

void Bubbling_sorting(int arr[], int sz)
{
	int i = 0;
	for (i = 0; i < sz - 1; i++)
	{
		int flag = 1;//假设一开始就是有序的,并且每次执行一趟之后，flag就会重新定义为1，这样如果arr[]={4,0,1,2,3}就只执行一趟，之后flag为1，break跳出，结束函数
		int j = 0;
		for (j = 0; j < sz - 1 - i; j++)//进入这个for循环就要开始一对一对的对比，当对比完都没有进入下面的if说明是有序的
		{
			if (arr[j]>arr[j + 1])//只要进入这个if语句，就说明至少不是有序的
			{
				int tmp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = tmp;
				flag = 0;
			}
		}
		if (flag == 1)//如果一开始就是有序的，就不会执行上面的if而flag就不会发生变化
		{
			break;//如果没有这个break，当它对比完第一趟后，即使是有序的，它也会进入第二趟对比，减慢运行效率。
		}
	}
}

int main()
{
	int arr[] = {9,0,1,2,3,4,5,6,7,8};
	int sz = sizeof(arr) / sizeof(arr[0]);
	Bubbling_sorting(arr,sz);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%d ", arr[i]);
	}
	return 0;
}
//冒泡排序改良版当arr有序时，就不会继续下一趟，而是直接结束函数
